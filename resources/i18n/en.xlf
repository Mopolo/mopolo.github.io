<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
    <file source-language="fr" target-language="en" datatype="plaintext" original="file.ext">
        <body>
            <!-- Site -->
            <trans-unit id="site.general.date.maintenant">
                <source>site.general.date.maintenant</source>
                <target>Now</target>
            </trans-unit>
            <trans-unit id="site.general.techs">
                <source>site.general.techs</source>
                <target>Techs :</target>
            </trans-unit>

            <!-- Menu -->
            <trans-unit id="site.menu.index">
                <source>site.menu.index</source>
                <target>Home</target>
            </trans-unit>
            <trans-unit id="site.menu.work">
                <source>site.menu.work</source>
                <target>Work</target>
            </trans-unit>
            <trans-unit id="site.menu.opensource">
                <source>site.menu.opensource</source>
                <target>Open source</target>
            </trans-unit>
            <trans-unit id="site.menu.studies">
                <source>site.menu.studies</source>
                <target>Studies</target>
            </trans-unit>
            <trans-unit id="site.menu.contact">
                <source>site.menu.contact</source>
                <target>Contact</target>
            </trans-unit>

            <!-- Pages -->
            <trans-unit id="site.pages.studies">
                <source>site.pages.studies</source>
                <target>Studies</target>
            </trans-unit>
            <trans-unit id="site.pages.contact">
                <source>site.pages.contact</source>
                <target>Contact</target>
            </trans-unit>
            <trans-unit id="site.pages.contact.email">
                <source>site.pages.contact.email</source>
                <target>My email is</target>
            </trans-unit>
            <trans-unit id="site.pages.contact.linkedin">
                <source>site.pages.contact.linkedin</source>
                <target>My Linkedin profile is</target>
            </trans-unit>
            <trans-unit id="site.pages.contact.linkedin.url">
                <source>site.pages.contact.linkedin.url</source>
                <target>here</target>
            </trans-unit>
            <trans-unit id="site.pages.contact.twitter">
                <source>site.pages.contact.twitter</source>
                <target>I'm also on Twitter:</target>
            </trans-unit>
            <trans-unit id="site.pages.work">
                <source>site.pages.work</source>
                <target>Work</target>
            </trans-unit>

            <!-- Work -->
            <trans-unit id="work.tde.intro">
                <source>work.tde.intro</source>
                <target>Total Direct Energie is a french electric utility company which produces and distributes gas and electricity.</target>
            </trans-unit>
            <trans-unit id="work.tde.summary">
                <source>work.tde.summary</source>
                <target>Complete refactor of the website and the API.</target>
            </trans-unit>
            <trans-unit id="work.tde.site.name">
                <source>work.tde.site.name</source>
                <target>Site</target>
            </trans-unit>
            <trans-unit id="work.tde.site.highlights">
                <source>work.tde.site.highlights</source>
                <target>
                    Configuration (pages, options, etc.)
                    Subscription form with complex steps
                    Consumption simulator
                    Client login flow
                    Admin login flow
                    Logging tool for WebServices and errors
                    Internal tools (e.g. monitoring)
                </target>
            </trans-unit>
            <trans-unit id="work.tde.micro.summary">
                <source>work.tde.micro.summary</source>
                <target>
                    This micro framework was developed to access the company's data the same way in the website and the API.
                </target>
            </trans-unit>
            <trans-unit id="work.tde.micro.highlights">
                <source>work.tde.micro.highlights</source>
                <target>
                    Composer for dependencies
                    Standalone Doctrine setup for several databases
                    Custom library to call SOAP and HTTP WebServices
                    Enum system to handle business "magic constants"
                    Documentation with Mkdocs
                    Unit and feature tests using PHPUnit
                    Code analysis with PHPStan
                </target>
            </trans-unit>
            <trans-unit id="work.tde.api.highlights">
                <source>work.tde.api.highlights</source>
                <target>
                    Built using Laravel
                    OAuth via Laravel Passport
                    Documentation OpenAPI
                </target>
            </trans-unit>

            <trans-unit id="work.globalis.intro">
                <source>work.globalis.intro</source>
                <target>Globalis is an IT service company based in Paris. I was on mission at L'Obs.</target>
            </trans-unit>
            <trans-unit id="work.globalis.summary">
                <source>work.globalis.summary</source>
                <target>Developments on the Nouvel Obs website</target>
            </trans-unit>
            <trans-unit id="work.globalis.obs.summary">
                <source>work.globalis.obs.summary</source>
                <target>The Nouvel Obs is a french online and paper magazine.</target>
            </trans-unit>
            <trans-unit id="work.globalis.obs.highlights">
                <source>work.globalis.obs.highlights</source>
                <target>
                    Home made PHP framework
                    Started and helped the transition from SVN to Git
                    Setup of an internal Gitlab
                    Backoffice to visualize create pages
                    Worked on the complete refactor of the Article page
                    Discovery of Docker as a dev environment
                </target>
            </trans-unit>

            <trans-unit id="work.osedea.intro">
                <source>work.osedea.intro</source>
                <target>
                    Osedea is a web agency based in Montréal, Québec. I started as an intern and continued on as an employee.

                    The company was small when I started so I had the opportunity to build/discover a lot.

                    It was also my first time working on MacOS and with a different keyboard layout than the french one.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.summary">
                <source>work.osedea.summary</source>
                <target>Development of differents sites and mobile apps.</target>
            </trans-unit>
            <trans-unit id="work.osedea.wss.summary">
                <source>work.osedea.wss.summary</source>
                <target>
                    WeSpeakStudent is the first big project I worked on at Osedea.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.wss.backend.highlights">
                <source>work.osedea.wss.backend.highlights</source>
                <target>
                    Built with Zend framework 2 and Doctrine
                    Emails are sent using Mandrill
                    Schools, accounts, students management
                    Paiements dashboard
                    Documents manager
                    Google Analytics dashboard
                    Push notifications
                    Student backend to manager their school's app
                    Rest API
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.wss.site.highlights">
                <source>work.osedea.wss.site.highlights</source>
                <target>
                    Build with AngularJS
                    Responsive and multi-lang
                    Students can pay for their health insurance using Stripe
                    Setup of prerender.io for SEO
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.wss.apps.highlights">
                <source>work.osedea.wss.apps.highlights</source>
                <target>
                    Built with Ionic
                    Released on iOs and Android
                    One app per school (example)
                    Public transport information is available using the GTFS standard
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.morcare.summary">
                <source>work.osedea.morcare.summary</source>
                <target>Morcare is an international version of WeSpeakStudent.</target>
            </trans-unit>
            <trans-unit id="work.osedea.arcelormittal.summary">
                <source>work.osedea.arcelormittal.summary</source>
                <target>
                    We built a tool to help with vehicle usage planing in a mine in Canada.

                    The assigning of vehicles was based on a lot of parameters and was done semi-manually using Excel.

                    The tool consists of a web app built with Zend 2 and AngularJS. It was able to assign vehicles automatically based on different criteria.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.familyreach.summary">
                <source>work.osedea.familyreach.summary</source>
                <target>
                    FamilyReach Give is a crowdfunding app to help families who have a child with cancer.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.familyreach.backend.highlights">
                <source>work.osedea.familyreach.backend.highlights</source>
                <target>
                    Built with Laravel and AngularJS
                    The association people can manage families, payments and parameters
                    Data is exposed via a REST APi
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.familyreach.app.highlights">
                <source>work.osedea.familyreach.app.highlights</source>
                <target>
                    Built with Ionic
                    Payments in-app using Stripe
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.gigleaf.summary">
                <source>work.osedea.gigleaf.summary</source>
                <target>
                    Gigleaf is a website that helps freelance artists to find gigs.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.gigleaf.highlights">
                <source>work.osedea.gigleaf.highlights</source>
                <target>
                    Built with Laravel
                    Single Page Application
                    Queued jobs using Beanstalk
                    Task scheduling using Laravel scheduler
                    Emailing using Mandrill API
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.simply-obstetrics.summary">
                <source>work.osedea.simply-obstetrics.summary</source>
                <target>
                    This is the first project I worked on during my internship at Osedea.

                    It's an app for doctors made using Ionic. All the content is static.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.osd.summary">
                <source>work.osedea.osd.summary</source>
                <target>
                    Osd is a tool for the terminal that I started building and kept working on for the entire time I was in the company.

                    It was first built as a single bash script but was quickly rebuilt using Node.js

                    It allowed to automate some of the company's processes.
                </target>
            </trans-unit>
            <trans-unit id="work.osedea.osd.highlights">
                <source>work.osedea.osd.highlights</source>
                <target>
                    SSH aliases management
                    Projects versions management (git tags, package.json)
                    Cordova projects compilation to iOs or Android
                    Time management
                    Project skeleton generation
                    Code snippets generation
                </target>
            </trans-unit>

            <trans-unit id="work.morningcroissant.intro">
                <source>work.morningcroissant.intro</source>
                <target>MorningCroissant is a house rental platform for your or other people's places.</target>
            </trans-unit>
            <trans-unit id="work.morningcroissant.summary">
                <source>work.morningcroissant.summary</source>
                <target>
                    I did a six months internship in this company in Paris.

                    I've done many things such as:
                </target>
            </trans-unit>
            <trans-unit id="work.morningcroissant.website.highlights">
                <source>work.morningcroissant.website.highlights</source>
                <target>
                    A drag&amp;drop uploader for photos
                    HTML integration of psd models
                    SEO
                    Wikipedia crawler
                    Improvements on the internal search engine
                    A/B testing solution
                    Visual calendar to choose availabilities
                </target>
            </trans-unit>

            <trans-unit id="work.ratp.intro">
                <source>work.ratp.intro</source>
                <target>
                    The Régie Autonome des Transports Parisiens (RATP) is the public transport operator of Paris and it's surroudings.
                </target>
            </trans-unit>
            <trans-unit id="work.ratp.summary">
                <source>work.ratp.summary</source>
                <target>Development of an internal app for the Paris subway.</target>
            </trans-unit>

            <!-- Studies -->
            <trans-unit id="studies.licence">
                <source>studies.licence</source>
                <target>Licence in IT</target>
            </trans-unit>
            <trans-unit id="studies.dut">
                <source>studies.dut</source>
                <target>DUT in IT</target>
            </trans-unit>
            <trans-unit id="studies.bac">
                <source>studies.bac</source>
                <target>Baccalauréat Scientifique</target>
            </trans-unit>

            <!-- Projects -->
            <trans-unit id="projects.magic-constant">
                <source>projects.magic-constant</source>
                <target>
                    PHP implementation of enumerations that can manage multiple formats.

                    It was developped at Direct Energie before being open sourced.
                </target>
            </trans-unit>
            <trans-unit id="projects.portfolio">
                <source>projects.portfolio</source>
                <target>
                    I like to redo my portfolio from time to time.

                    I used different technologies throughout the years: Jekyll (ruby), Jigsaw (PHP) and now custom PHP.
                </target>
            </trans-unit>
            <trans-unit id="projects.craftworld">
                <source>projects.craftworld</source>
                <target>
                    CraftWorld was a french Minecraft server created in 2011 and closed in 2014.

                    This project was both a hobby and a way to practice and experiment technologies. The game and the website were hosted on two different machines.

                    I developed an API and tools to create interactions between the website and the game.

                    Players could administrate some aspects of the game on the website such as their ingame money and their rank.

                    I also built a full control panel for the staff team which allowed them to administrate the server without being logged in the game. They could see the console log, execute ingame commands, kick/ban players, install new features, start/stop the server, etc.
                </target>
            </trans-unit>
        </body>
    </file>
</xliff>
